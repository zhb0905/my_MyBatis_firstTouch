<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
    <!--int insertUser();-->
    <insert id="insertUser">
        insert into t_user
        values (null, '张三', '123', 23, '女')
    </insert>
    <!--    int deleteUser();-->
    <delete id="deleteUser">
        delete
        from t_user
        where id = 1;
    </delete>
    <!--    int updateUser();-->
    <update id="updateUser">
        update t_user
        set username='ybc',
            password='123'
        where id = 2;
    </update>
    <!--    User getUserById();-->
    <!--    注意：-->
    <!--    1、查询的标签select必须设置属性resultType或resultMap，用于设置实体类和数据库表的映射-->
    <!--    关系-->
    <!--    resultType：自动映射，用于属性名和表中字段名一致的情况-->
    <!--    resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况-->
    <!--    2、当查询的数据为多条时，不能使用实体类作为返回值，只能使用集合，否则会抛出异常-->
    <!--    TooManyResultsException；但是若查询的数据只有一条，可以使用实体类或集合作为返回值-->
    <!--    <select id="getUserById" resultType="User">-->
    <!--        select * from t_user where id = 2;-->
    <!--    </select>-->
    <!--    List<User> getUserList();-->
    <select id="getUserList" resultType="User">
        select *
        from t_user;
    </select>

    <!--    User getUserById(@Param("id") int id);-->
    <select id="getUserById" resultType="User">
        select *
        from t_user
        where id = #{id}
    </select>
</mapper>